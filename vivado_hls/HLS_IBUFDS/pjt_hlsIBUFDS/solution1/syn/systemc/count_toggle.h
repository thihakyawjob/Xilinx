// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _count_toggle_HH_
#define _count_toggle_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct count_toggle : public sc_module {
    // Port declarations 4
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_out< sc_logic > toggle;
    sc_out< sc_logic > toggle_ap_vld;


    // Module declarations
    count_toggle(sc_module_name name);
    SC_HAS_PROCESS(count_toggle);

    ~count_toggle();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<32> > count;
    sc_signal< sc_lv<1> > toggle_max;
    sc_signal< sc_lv<1> > xor_ln13_fu_72_p2;
    sc_signal< sc_lv<1> > ap_phi_mux_toggle_max_loc_0_phi_fu_38_p4;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > icmp_ln11_fu_61_p2;
    sc_signal< sc_lv<32> > add_ln10_fu_49_p2;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_state1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln10_fu_49_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_phi_mux_toggle_max_loc_0_phi_fu_38_p4();
    void thread_icmp_ln11_fu_61_p2();
    void thread_toggle();
    void thread_toggle_ap_vld();
    void thread_xor_ln13_fu_72_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
