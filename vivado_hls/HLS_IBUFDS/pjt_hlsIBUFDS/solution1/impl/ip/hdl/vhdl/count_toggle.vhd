-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity count_toggle is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    toggle : OUT STD_LOGIC;
    toggle_ap_vld : OUT STD_LOGIC );
end;


architecture behav of count_toggle is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "count_toggle,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.794000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=34,HLS_SYN_LUT=74,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal count : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal toggle_max : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal xor_ln13_fu_72_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_toggle_max_loc_0_phi_fu_38_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal icmp_ln11_fu_61_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln10_fu_49_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                count <= add_ln10_fu_49_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln11_fu_61_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                toggle_max <= xor_ln13_fu_72_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln10_fu_49_p2 <= std_logic_vector(unsigned(count) + unsigned(ap_const_lv32_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_phi_mux_toggle_max_loc_0_phi_fu_38_p4_assign_proc : process(toggle_max, xor_ln13_fu_72_p2, ap_CS_fsm_state1, icmp_ln11_fu_61_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
            if ((icmp_ln11_fu_61_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_toggle_max_loc_0_phi_fu_38_p4 <= toggle_max;
            elsif ((icmp_ln11_fu_61_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_toggle_max_loc_0_phi_fu_38_p4 <= xor_ln13_fu_72_p2;
            else 
                ap_phi_mux_toggle_max_loc_0_phi_fu_38_p4 <= "X";
            end if;
        else 
            ap_phi_mux_toggle_max_loc_0_phi_fu_38_p4 <= "X";
        end if; 
    end process;

    icmp_ln11_fu_61_p2 <= "1" when (add_ln10_fu_49_p2 = ap_const_lv32_FFFFFFFF) else "0";
    toggle <= ap_phi_mux_toggle_max_loc_0_phi_fu_38_p4(0);

    toggle_ap_vld_assign_proc : process(ap_CS_fsm_state1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            toggle_ap_vld <= ap_const_logic_1;
        else 
            toggle_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln13_fu_72_p2 <= (toggle_max xor ap_const_lv1_1);
end behav;
